---
- name: Test ping host all
  hosts: all
  #become: yes
  gather_facts: yes
  tasks:
  - name: Debug
    debug:
      msg: Hello

  - name: Download nodejs
    get_url:
      url: "{{ node_url }}"
      dest: /opt/node.tar.xz

  - name: Create new directory
    ansible.builtin.file:
      path: /opt/node
      state: directory

  - name: Unzip node.tar.xz in /opt/node
    ansible.builtin.unarchive:
      src: /opt/node.tar.xz
      dest: /opt/node
      remote_src: yes

  - name: add to path
    lineinfile:
      dest: '/root/.profile'
      state: present
      line: 'export PATH=$PATH:/opt/node/node-v{{ node_version }}-linux-x64/bin'

  - name: Execute the command in remote shell; stdout goes to the specified file on the remote
    ansible.builtin.shell: . /root/.profile &&node --version

  - name: Create new directory
    ansible.builtin.file:
      path: /opt/back-front
      state: directory

  - name: Git checkout
    ansible.builtin.git:
      repo: 'https://github.com/RoboInterativo/simple-back-front'
      dest: /opt/back-front
      force: yes

  - name: Del build directory
    ansible.builtin.file:
      path: /opt/back-front/front/build
      state: absent

  - name: Create new directory
    ansible.builtin.file:
      path: /opt/back-front/front/build
      state: directory

  - name: Execute the command in remote shell; stdout goes to the specified file on the remote
    ansible.builtin.shell: . /root/.profile &&npm install -f && npm run build
    args:
      chdir: /opt/back-front/front

  - name: Install the package "nginx"
    apt:
      name: nginx

  - name: Del /www/html/ directory
    ansible.builtin.file:
      path: /opt/back-front/www/html
      state: absent

  - name: Create new directory
    ansible.builtin.file:
      path: /opt/back-front/www/
      state: directory

  - name: Create new directory
    ansible.builtin.file:
      path: /opt/back-front/www/html
      state: directory

  - name: copy build from html
    copy:
      src: /opt/back-front/front/build
      dest: /opt/back-front/www/html
      remote_src: yes

  - name: Install the package "python-pip"
    apt:
      name: python-pip

  # Install Flask
  - pip:
      name:
        - flask
        - lxml
        - json
